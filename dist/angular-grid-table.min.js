/*!
 * angular-grid-table
 * @version: 0.0.1 - 2015-08-14T07:21:38.893Z
 * @author: Alex Elenvarenko <alexelenvarenko@gmail.com>
 * @license: MIT
 */
!function(){"use strict";var grid=angular.module("gridTable",[]);grid.constant("gridTableGlobals",{tplUrl:"",template:"{toolbar}{header}{items}{footer}",theme:"",pager:{pagesMaxCount:5},text:{tools:"Tools:",refresh:"↻",refreshTitle:"Refresh",clearFilter:"X",clearFilterTitle:"Clear filter",pager:"Pages:",viewBy:"View by:",numbers:"#",actions:"Actions",asc:"⇣",desc:"⇡",empty:"Empty",viewed:"Viewed:",total:"total:"},formatters:{"boolean":{"true":"Yes","false":"No"},currency:{sep:" "},date:{format:"d.m.Y"},datetime:{format:"d.m.Y H:i:s"}},set:function(e,t){this[e]=angular.isObject(this[e])?angular.extend(this[e],t):t},get:function(e){return this[e]||null}}),grid.controller("gridTableCtrl",["$scope","$compile","$parse","$filter","$interval","gridTableGlobals","gridTableSettings","gridTablePager",function($scope,$compile,$parse,$filter,$interval,cGlobals,fSettings,fPager){var ctrl=this;$scope.$grid={debug:!1,remote:!1,template:null,text:{},loading:!1,ngModelVar:"",rowNumbers:!1,checkboxes:!1,columns:[],columnsCount:0,hiddenColumns:[],sorted:!1,multiSort:!1,sort:{},filtered:!1,filters:null,filter:{},filterTimeoutId:null,filterTimeout:500,viewBy:10,viewByList:[10,25,50],pager:{current:0,total:0,limit:0,offset:0,pagesMaxCount:null,items:[]},selectable:!0,multiSelect:!1,selected:null,items:[],itemsCount:0,itemActions:null,itemActionsExp:null,params:{},paramsVars:{},errors:null,events:["onColumnsUpdate","onItemClick","onItemDblClick","onItemsUpdate","onPage","onViewBy","onSort","onFilter","onSelect","onParams","onUpdate","onError"],listeners:{},genId:function(e){return e.replace(/\.|_/g,"-")},getValue:function(e,t){return $parse(t)(e)},buildColumns:function(e,t){var i,r,n;if(this.columns=[],this.columnsCount=0,this.rowNumbers&&this.columns.push({columnType:"numbers"}),e)if(angular.isArray(e)&&e.length>0)for(r in e)i=e[r],i.columnType="data",this.columns.push(i);else for(n in e)i=e[n],i.columnType="data",this.columns.push(i);if(t)for(n in t)"$$hashKey"!==n&&this.columns.push({name:n,label:n,columnType:"data"});this.itemActions&&this.columns.push({columnType:"actions"}),this.columnsCount=this.columns.length},setColumns:function(e){e&&(this.buildColumns(e),this.triggerEvent("onColumnsUpdate"))},setColumnsByModel:function(e){e&&(this.buildColumns(null,e),this.triggerEvent("onColumnsUpdate"))},getColumns:function(){return this.columns||[]},isColumnHidden:function(e){return-1!==this.hiddenColumns.indexOf(e)},showHideColumn:function(e,t){t.preventDefault(),e?this.isColumnHidden(e)?this.hiddenColumns.splice(this.hiddenColumns.indexOf(e),1):this.hiddenColumns.push(e):this.hiddenColumns=[]},getShowColumns:function(){var e,t=[];for(e in this.columns)this.isColumnHidden(this.columns[e].name)&&"data"===this.columns[e].columnType||t.push(this.columns[e]);return t},setItems:function(e){if(this.remote||(this.loading=!0),!e)return void(this.items=[]);if(!this.remote){if(this.sort.column&&this.sort.dir){var t=this.sort;e=e.sort(function(e,i){var r=e[t.column],n=i[t.column];return"asc"===t.dir?n>r?-1:r>n?1:0:n>r?1:r>n?-1:0})}this.filter&&(e=$filter("filter")(e,this.filter)),this.pager.total=e.length}this.pager.current>Math.ceil(this.pager.total/this.viewBy)&&(this.pager.current=Math.ceil(this.pager.total/this.viewBy)-1),this.pager.items=fPager.createItems(this.pager.current,this.viewBy,this.pager.total,this.pager.pagesMaxCount),this.items=this.remote?e:e.slice(this.pager.current*this.viewBy,(this.pager.current+1)*this.viewBy),this.itemsCount=this.items.length||0,this.remote||(this.loading=!1),this.triggerEvent("onItemsUpdate")},getItems:function(){return this.items||[]},itemClick:function(e,t){t.preventDefault(),t.stopPropagation(),this.selectable&&this.itemSelect(e),this.triggerEvent("onItemClick")},itemDblClick:function(){this.triggerEvent("onItemDblClick")},isItemSelected:function(e){if(this.selected){if(!this.multiSelect)return this.selected===e;if(angular.isArray(this.selected)&&this.selected.length>0)return-1!==this.selected.indexOf(e)}return!1},itemSelect:function(e){if(!e)return void(this.selected=null);var t=this.isItemSelected(e);this.multiSelect?t?this.selected.splice(this.selected.indexOf(e),1):angular.isArray(this.selected)?this.selected.push(e):this.selected=[e]:this.selected=t?null:e,this.triggerEvent("onSelect")},itemActionsShow:function(item){var value=!0;try{value=eval(this.itemActionsExp)}catch(e){value=!1}return value},itemActionCall:function(e,t,i){i.preventDefault(),i.stopPropagation(),e(t)},refresh:function(e){e.preventDefault(),e.stopPropagation(),this.updateParams(),this.update()},clearFilter:function(e){e.preventDefault(),e.stopPropagation(),this.setFilter({}),this.updateParams(),this.update()},setPage:function(e,t){t.preventDefault(),t.stopPropagation(),this.pager.current!=e&&(this.pager.current=e,this.pager.limit=this.viewBy,this.pager.offset=this.pager.current*this.pager.limit,this.updateParams(),this.triggerEvent("onPage"),this.update())},getPage:function(){return this.pager.current||0},setViewBy:function(e,t){t.preventDefault(),t.stopPropagation(),this.viewBy!=e&&(this.viewBy=e,this.updateParams(),this.triggerEvent("onViewBy"),this.update())},getViewBy:function(){return this.viewBy},setSort:function(e){this.sort=e,this.triggerEvent("onSort"),this.update()},getSort:function(){return this.sort||{}},setSortBy:function(e,t,i){i.preventDefault(),i.stopPropagation(),this.sort.column===e?this.sort.dir="asc"===this.sort.dir?"desc":"asc":this.sort={column:e,dir:t?t:"asc"},this.updateParams(),this.triggerEvent("onSort"),this.update()},getSortColumn:function(){return this.sort.column||null},getSortDir:function(){return this.sort.dir||null},setFilter:function(e){this.filter=e,this.triggerEvent("onFilter")},getFilter:function(){return this.filter},setFilterBy:function(){var e=this;this.filterTimeoutId||(this.filterTimeoutId=$interval(function(){e.updateParams(),e.triggerEvent("onFilter"),e.update()},this.filterTimeout))},getFilterColumn:function(){},getFilterColumnValue:function(e){return this.filter[e]||null},setParams:function(e){e.viewBy&&(this.viewBy=e.viewBy),e.pager&&(this.pager.current=e.pager.current,this.pager.total=e.pager.total),e.sort&&(this.sort.column=e.sort.column,this.sort.dir=e.sort.dir),this.update()},getParams:function(){return this.params},updateParams:function(){this.params={},this.sort.column&&(this.params.sort=("asc"==this.sort.dir?"":"-")+(this.sort.column?this.sort.column:"")),this.params.page=this.pager.current+1,this.params.perPage=this.viewBy,this.params=angular.extend(this.params,this.filter),this.triggerEvent("onParams")},update:function(){this.filterTimeoutId&&($interval.cancel(this.filterTimeoutId),this.filterTimeoutId=null),this.setItems($parse($scope.$grid.ngModelVar)($scope))},addEvent:function(e,t){(e||t)&&-1!==this.events.indexOf(e)&&(void 0===this.listeners[e]&&(this.listeners[e]=[]),-1===this.listeners[e].indexOf(t)&&this.listeners[e].push(t))},triggerEvent:function(e,t){e&&-1!==this.events.indexOf(e)&&this[e](t)},removeEvent:function(e){e&&this.events[e]&&this.listeners[e]&&(this.listeners[e]=null)},listenersCall:function(e,t){if(null!==this.listeners[e]&&angular.isArray(this.listeners[e]))for(var i in this.listeners[e]){var r=this.listeners[e][i];angular.isFunction(r)&&(angular.isArray(t)||(t=[t]),r.apply(this,t))}},onColumnsUpdate:function(){this.debug&&console.info("grid-table: columns update event handler"),this.listenersCall("onColumnsUpdate",this.columns)},onItemsUpdate:function(){this.debug&&console.info("grid-table: items update event handler"),this.listenersCall("onItemsUpdate",this.items)},onItemClick:function(){this.debug&&console.info("grid-table: item click event handler"),this.listenersCall("onItemClick",this.selected)},onItemDblClick:function(){this.debug&&console.info("grid-table: item dbl click event handler"),this.listenersCall("onItemDblClick",this.selected)},onSelect:function(){this.debug&&console.info("grid-table: item select event handler"),this.listenersCall("onSelect",this.selected)},onViewBy:function(){this.debug&&console.info("grid-table: view by count event handler"),this.listenersCall("onViewBy",this.viewBy)},onPage:function(){this.debug&&console.info("grid-table: page update event handler"),this.listenersCall("onPage",this.pager)},onSort:function(){this.debug&&console.info("grid-table: sort update event handler"),this.listenersCall("onSort",this.sort)},onFilter:function(){this.debug&&console.info("grid-table: filter update handler"),this.listenersCall("onFilter",this.filter)},onParams:function(){this.debug&&console.info("grid-table: params update event handler"),this.listenersCall("onParams",this.params)},onUpdate:function(){this.debug&&console.info("grid-table: update event handler"),this.listenersCall("onUpdate",[this.items,this.columns,this.pager,this.viewBy,this.sort,this.filter])},onError:function(){this.debug&&console.info("grid-table: error event handler"),this.listenersCall("onError",this.errors)}},ctrl.init=function(e,t){var i=cGlobals;if(t.settings,t.debug&&($scope.$grid.debug=t.debug),t.remote&&($scope.$grid.remote=$parse(t.remote)($scope)),$scope.$grid.template=t.template?$parse(t.template)($scope):i.template,t.text){var r=$parse(t.text)($scope);$scope.$grid.text=angular.extend(i.text,r)}else $scope.$grid.text=i.text;t.ngModel&&($scope.$grid.ngModelVar=t.ngModel),t.rowNumbers&&($scope.$grid.rowNumbers=t.rowNumbers),t.checkboxes&&($scope.$grid.checkboxes=t.checkboxes),t.filters&&($scope.$grid.filters=$parse(t.filters)($scope)),t.selectable&&($scope.$grid.selectable=$parse(t.selectable)($scope)),t.actions&&($scope.$grid.itemActions=$parse(t.actions)($scope)),t.actionsExp&&($scope.$grid.itemActionsExp=t.actionsExp),t.pagesMaxCount&&($scope.$grid.pager.pagesMaxCount=parseInt(t.pagesMaxCount));for(var n in $scope.$grid.events){var l=$scope.$grid.events[n];if(t[l]){var s=$parse(t[l])($scope);s&&angular.isFunction(s)&&$scope.$grid.addEvent(l,s)}}},ctrl.loadSetting=function(){},ctrl.parseSetting=function(){},ctrl.renderTpl=function(e,t){var i,r,n,l=$scope.$grid.template.match(/\{[a-z\:]+\}/g);if(l&&l.length>0)for(i in l)r=l[i].replace(/\{|\}/g,""),n=null,-1!==r.indexOf(":")&&(n=r.split(":"),r=n.splice(0,1)[0]),r="render"+r[0].toUpperCase()+r.substr(1),ctrl[r]&&angular.isFunction(ctrl[r])&&(e=ctrl[r](e,t));return e},ctrl.renderToolbar=function(e){var t=angular.element(document.createElement("div"));return t.addClass("grid-table-toolbar"),t.attr({"grid-table-toolbar":""}),e.find(".grid-table-wrapper").append(t),e},ctrl.renderTable=function(e){if(e.find("table").length>0)return e;var t=angular.element(document.createElement("table"));return t.addClass("grid-table-table"),t.attr({"ng-class":"{'loading': $grid.loading !== false}"}),e.find(".grid-table-wrapper").append(t),e},ctrl.renderHeader=function(e){var t=angular.element(document.createElement("colgroup")),i=angular.element(document.createElement("thead"));return t.attr({"grid-table-columns":""}),t.addClass("grid-table-columns"),i.attr({"grid-table-header":""}),i.addClass("grid-table-header"),e=this.renderTable(e),e.find("table").append(t),e.find("table").append(i),e},ctrl.renderItems=function(e){var t=angular.element(document.createElement("tbody"));return t.attr({"grid-table-items":""}),t.addClass("grid-table-items"),e=this.renderTable(e),e.find("table").append(t),e},ctrl.renderFooter=function(e){var t=angular.element(document.createElement("tfoot"));return t.attr({"grid-table-footer":""}),t.addClass("grid-table-footer"),e=this.renderTable(e),e.find("table").append(t),e},ctrl.compileTpl=function(e,t){$compile(t.contents())(e)},ctrl.set=function(){if(!angular.isString(arguments[0]))throw new Error("First argument must be a string");var e=Array.prototype.splice.call(arguments,0,1)+"",t="set",i=t+e.substr(0,1).toUpperCase()+e.substr(1);if(ctrl[i]){if(!angular.isFunction(ctrl[i]))throw new Error("Setter {"+i+"} must be a function");ctrl[i].apply(this,arguments)}else if(void 0!==ctrl[e])angular.isFunction(ctrl[e])?ctrl[e].apply(this,arguments):ctrl[e]=arguments[0];else if($scope.$grid[i]){if(!angular.isFunction($scope.$grid[i]))throw new Error("Setter {"+i+"} must be a function");$scope.$grid[i].apply($scope.$grid,arguments)}else{if(void 0===$scope.$grid[e])throw new Error("Can set undefined variable {"+e+"}");angular.isFunction($scope.$grid[e])?$scope.$grid[e].apply($scope.$grid,arguments):$scope.$grid[e]=arguments[0]}},ctrl.get=function(e){var t="get",i=t+e.substr(0,1).toUpperCase()+e.substr(1);if(ctrl[i]){if(angular.isFunction(ctrl[i]))return ctrl[i]();throw new Error("Getter {"+i+"} must be a function")}if(void 0!==ctrl[e])return angular.isFunction(ctrl[e])?ctrl[e]():ctrl[e];if($scope.$grid[i]){if(angular.isFunction($scope.$grid[i]))return $scope.$grid[i]();throw new Error("Getter {"+i+"} must be a function")}return void 0!==$scope.$grid[e]?angular.isFunction($scope.$grid[e])?$scope.$grid[e]():$scope.$grid[e]:void 0}}]),grid.factory("gridTableColumn",[function(){return{}}]),grid.factory("gridTablePager",["gridTableGlobals",function(e){return{createItems:function(t,i,r,n){if(r&&0>=r)return[];var l,s=[],a=Math.ceil(r/i),o=0,c=0;n=n||e.pager.pagesMaxCount,n%2===0&&n++,l=Math.round(n/2),a>n&&t>0&&(s.push({label:"<<",index:0,disable:0>=t}),s.push({label:"<",index:0>=t?0:t-1,disable:0===t})),l>=t+1&&(o=0,c=n),t>a-1&&(o=t-l,c=o+n),t+1>a-l&&(o=a-n,c=a),a-l+1>t+1&&t+1>l&&(o=t+1-l,c=t+l),n>a&&(o=0,c=a),1>=a&&(o=c=0);for(var u=o;c>u;u++)s.push({label:u+1,index:u});return a>n&&a-1>t&&(s.push({label:">",index:a-1>t?t+1:t,disable:t==a-1}),s.push({label:">>",index:a-1,disable:t==a-1})),s}}}]),grid.factory("gridTableRemote",["$q","$http","$parse",function(e,t){var i={url:"",method:"get",data:null,resultVar:"data.data"};return{set:function(){},get:function(r){return e(function(e){t({url:i.url,method:i.method.toUpperCase,data:r}).then(function(t){e(t.data)},function(t){e(t.data)})})},sync:function(){}}}]),grid.factory("gridTableSettings",[function(){var e={template:"{toolbar}{header}{items}{footer}",text:{viewBy:"View by: ",numbers:"#",actions:"Actions",asc:"⇣",desc:"⇡",empty:"Empty",total:"Total: "},pageParams:{page:"page",perPage:"per-page"},viewByList:[10,25,50],sorted:!1,multiSort:!1,sortParams:{asc:"asc",desc:"desc"},filtered:!1,filterTimeout:500,multiSelect:!1};return{get:function(){return e},extend:function(t){return angular.extend(e,t)}}}]),grid.filter("gridTableFormatter",["gridTableGlobals",function(e){var t={"boolean":function(t){return t===!0||"true"===t||"1"===t||1===t?e.formatters["boolean"]["true"]:e.formatters["boolean"]["false"]},integer:function(e){return e},string:function(e){return e},currency:function(e){return e+="",-1===e.indexOf(".")&&(e+=".00"),e},date:function(e){var t=/([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})/;return e+="",t.test(e)&&(e=e.replace(t,"$3.$2.$1")),e},datetime:function(e){var t=/([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})\s(([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}))(.*)/;return e+="",t.test(e)&&(e=e.replace(t,"$3.$2.$1 $4")),e},html:function(e){return e}};return function(e,i,r){return void 0===e||null===e?e:(t[i]&&angular.isFunction(t[i])&&(e=t[i](e,r)),e)}}]),grid.directive("gridTableColumns",["gridTableGlobals",function(e){return{restrict:"EA",require:"^gridTable",templateUrl:function(){return e.tplUrl+"grid-table-columns.html"}}}]),grid.directive("gridTableFilter",["$compile",function(e){return{restrict:"EA",require:"^gridTable",compile:function(){return function(t,i){t.gridFilter.html&&(i.append(t.gridFilter.html),e(i.contents())(t))}}}}]),grid.directive("gridTableFooter",["gridTableGlobals",function(e){return{restrict:"EA",require:"^gridTable",templateUrl:function(){return e.tplUrl+"grid-table-footer.html"}}}]),grid.directive("gridTableHeader",["gridTableGlobals",function(e){return{restrict:"EA",require:"^gridTable",templateUrl:function(){return e.tplUrl+"grid-table-header.html"}}}]),grid.directive("gridTableItemAction",[function(){return{restrict:"EA",scope:{html:"=html"},link:function(e,t){t.append(e.html)}}}]),grid.directive("gridTableItems",["gridTableGlobals",function(e){return{restrict:"EA",require:"^gridTable",templateUrl:function(){return e.tplUrl+"grid-table-items.html"}}}]),grid.directive("gridTableToolbar",["gridTableGlobals",function(e){return{restrict:"EA",require:"^gridTable",templateUrl:function(){return e.tplUrl+"grid-table-toolbar.html"}}}]),grid.directive("gridTable",["$parse","gridTableGlobals",function(e,t){return{restrict:"EA",require:["^gridTable","ngModel"],scope:!0,templateUrl:function(){return t.tplUrl+"grid-table.html"},controller:"gridTableCtrl",controllerAs:"$gridCtrl",compile:function(){return function(t,i,r,n){var l=n[0];if(l.init(i,r),i=l.renderTpl(i,r),l.compileTpl(t,i),r.selectable&&t.$watch(r.selectable,function(i,n){angular.equals(i,n)||l.set("selectable",e(r.selectable)(t))}),r.columns)l.set("columns",e(r.columns)(t)),t.$watchCollection(r.columns,function(e,t){angular.equals(e,t)||l.set("columns",e)});else{var s=e(r.ngModel)(t);s&&s.length>0&&l.set("columnsByModel",s[0]),t.$watchCollection(r.ngModel,function(e,t){angular.equals(e,t)||e&&e.length>0&&l.set("columnsByModel",e[0])})}l.set("items",e(r.ngModel)(t)),t.$watchCollection(r.ngModel,function(e,t){angular.equals(e,t)||l.set("items",e)}),r.loading&&t.$watch(r.loading,function(e,t){angular.equals(e,t)||l.set("loading",e)}),r.params&&t.$watchCollection(r.params,function(e,t){angular.equals(e,t)||l.set("params",e)})}}}}]),grid.run(["$templateCache",function(e){e.put("grid-table-columns.html",'<col ng-repeat="column in $grid.getShowColumns()" class="{{\'grid-table-column-\' + column.columnType}}">'),e.put("grid-table-footer.html",'<tr><td colspan="{{$grid.columnsCount}}">{{$grid.text.viewed}} {{$grid.itemsCount}}, {{$grid.text.total}} {{$grid.pager.total}}</td></tr>'),e.put("grid-table-header.html",'<tr class="grid-table-headers"><th ng-repeat="column in $grid.getShowColumns()" ng-class="{\'sorted\': column.name === $grid.getSortColumn()}"><span ng-if="column.columnType === \'data\'"><a ng-click="$grid.setSortBy(column.name, null, $event)" href="#">{{column.label}} <i>{{column.name === $grid.getSortColumn() ? ($grid.getSortDir() === \'asc\' ? $grid.text.asc : $grid.text.desc) : \'\'}}</i></a></span> <span ng-if="column.columnType === \'checkbox\'">{{$grid.text.checkbox}}</span> <span ng-if="column.columnType === \'numbers\'">{{$grid.text.numbers}}</span> <span ng-if="column.columnType === \'actions\'">{{$grid.text.actions}}</span></th></tr><tr class="grid-table-filter"><td ng-repeat="column in $grid.getShowColumns()"><span ng-if="column.columnType === \'data\'"><span ng-if="$grid.filters[column.name]"><span ng-init="gridFilter = $grid.filters[column.name]"><span ng-if="gridFilter.html"><span grid-table-filter=""></span></span> <span ng-if="!gridFilter.html"><select ng-model="$grid.filter[gridFilter.name]" ng-change="$grid.setFilterBy()" id="{{$grid.genId(gridFilter.name)}}" style="width: {{gridFilter.width ? gridFilter.width : \'100%\'}};"><option value=""></option><option ng-repeat="val in gridFilter.values" value="{{val[gridFilter.value]}}">{{val[gridFilter.label]}}</option></select></span></span></span> <span ng-if="!$grid.filters[column.name]"><input ng-model="$grid.filter[column.name]" ng-change="$grid.setFilterBy()" id="{{$grid.genId(column.name)}}"></span></span></td></tr>'),e.put("grid-table-items.html",'<tr ng-init="itemsIndex = $index + 1" ng-repeat="item in $grid.getItems()" ng-click="$grid.itemClick(item, $event)" ng-dblclick="$grid.itemDblClick(item, $event)" ng-class="{\'selectable\': $grid.selectable, \'active\': $grid.isItemSelected(item)}" class="grid-table-item"><td ng-repeat="column in $grid.getShowColumns()">{{column.columnType == \'numbers\' ? itemsIndex : \'\'}} <span ng-if="column.columnType == \'checkbox\'"><input ng-click="$grid.selectItem(item)" ng-checked="$grid.isItemSelected(item)" type="checkbox"></span> {{$grid.getValue(item, column.name) | gridTableFormatter:column.type}} <span ng-if="column.columnType === \'actions\' && $grid.itemActions && $grid.itemActionsShow(item)"><span ng-repeat="action in $grid.itemActions" ng-click="$grid.itemActionCall(action.fn, item, $event)">{{action.text}} <span grid-table-item-action="" html="action.html"></span></span></span></td></tr><tr><td ng-show="$grid.itemsCount <= 0" colspan="{{$grid.columnsCount}}">{{$grid.text.empty}}</td></tr>'),e.put("grid-table-toolbar.html",'<div class="grid-table-tools"><span class="tools-label">{{$grid.text.tools}}</span><ul class="tools"><li><a ng-click="$grid.refresh($event)" href="#" title="{{$grid.text.refreshTitle}}">{{$grid.text.refresh}}</a></li><li><a ng-click="$grid.clearFilter($event)" href="#" title="{{$grid.text.clearFilterTitle}}">{{$grid.text.clearFilter}}</a></li></ul></div><div class="grid-table-pager"><span class="pager-label">{{$grid.text.pager}}</span><ul class="pager"><li ng-repeat="page in $grid.pager.items" ng-click="$grid.setPage(page.index, $event)" ng-class="{\'active\': page.index == $grid.getPage()}" ng-disabled="page.disable"><a href="#">{{page.label}}</a></li></ul></div><div class="grid-table-view-by"><span class="view-by-label">{{$grid.text.viewBy}}</span><ul class="view-by"><li ng-repeat="item in $grid.viewByList" ng-click="$grid.setViewBy(item, $event)" ng-class="{\'active\': item == $grid.viewBy}"><a href="#">{{item}}</a></li></ul></div><div class="grid-table-clear"></div>'),e.put("grid-table.html",'<div class="grid-table-wrapper"></div>')}])}();