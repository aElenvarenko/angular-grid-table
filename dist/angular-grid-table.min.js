/*!
 * angular-grid-table
 * @version: 0.0.1 - 2015-04-11T15:10:48.898Z
 * @author: Alex Elenvarenko <alexelenvarenko@gmail.com>
 * @license: MIT
 */
!function(){"use strict";var e=angular.module("gridTable",[]);e.controller("gridTableCtrl",["$compile","$scope",function(e,t){var l=this;t.$grid={defaults:{template:"{header}{items}{footer}",sorted:!1,sortParams:{asc:"asc",desc:"desc"},pageParams:{page:"page",perPage:""},filtered:!1,multiSelect:!1,viewByList:[10,25,50]},debug:!0,columns:[],columnsCount:0,hiddenColumns:[],items:[],itemsCount:0,rowNumbers:!1,itemActions:null,multiSelect:!1,selected:null,sorted:!1,sort:{},filtered:!1,filter:{},viewBy:10,viewByList:[10,25,50],pager:{current:0,total:0,limit:0,offset:0},params:{},paramsVars:{},events:{onColumnsUpdate:null,onItemsUpdate:null,onSelect:null,onSort:null,onFilter:null,onUpdate:null,onError:null},setColumns:function(e){if(this.debug&&console.log("gridTableCtrl::grid::setColumns"),e){var t;if(this.columns=[],this.columnsCount=0,this.rowNumbers&&this.columns.push({label:"#",columnType:"numbers"}),angular.isArray(e)&&e.length>0)for(var l in e)t=e[l],t.columnType="data",this.columns.push(t);else for(var n in e)t=e[n],t.columnType="data",this.columns.push(t);this.columnsCount=this.columns.length}},setColumnsByModel:function(e){if(this.debug&&console.log("gridTableCtrl::grid::setColumnsByModel"),e){this.columns=[],this.columnsCount=0,this.rowNumbers&&this.columns.push({label:"#",columnType:"numbers"});for(var t in e)"$$hashKey"!==t&&this.columns.push({name:t,label:t,columnType:"data"});this.columnsCount=this.columns.length}},getColumns:function(){return this.debug&&console.log("gridTableCtrl::grid::getColumns"),this.columns||[]},isHiddenColumns:function(e){return this.debug&&console.log("gridTableCtrl::grid::isHiddenColumns"),-1!==this.hiddenColumns.indexOf(e)},showHideColumn:function(e,t){this.debug&&console.log("gridTableCtrl::grid::showHideColumn"),e?this.isHiddenColumns(e)?this.hiddenColumns.splice(this.hiddenColumns.indexOf(e),1):this.hiddenColumns.push(e):this.hiddenColumns=[],t.preventDefault()},getShowColumns:function(){this.debug&&console.log("gridTableCtrl::grid::getShowColumns");var e=[];for(var t in this.columns)this.isHiddenColumns(this.columns[t].name)&&"data"===this.columns[t].columnType||e.push(this.columns[t]);return e},setItems:function(e){return this.debug&&console.log("gridTableCtrl::grid::setItems"),e?(this.items=e,void(this.itemsCount=this.items.length||0)):void(this.items=[])},getItems:function(){return this.debug&&console.log("gridTableCtrl::grid::getItems"),this.items||[]},isSelectedItem:function(e){if(this.debug&&console.log("gridTableCtrl::grid::isSelectedItem"),this.selected){if(!this.multiSelect)return this.selected===e;if(angular.isArray(this.selected)&&this.selected.length>0)return-1!==this.selected.indexOf(e)}return!1},selectItem:function(e){if(this.debug&&console.log("gridTableCtrl::grid::selectItem"),!e)return void(this.selected=null);var t=this.isSelectedItem(e);this.multiSelect?t?this.selected.splice(this.selected.indexOf(e),1):angular.isArray(this.selected)?this.selected.push(e):this.selected=[e]:this.selected=t?null:e},addEvent:function(e,t){this.debug&&console.log("gridTableCtrl::grid::addEvent"),!e&&!t},triggerEvent:function(e,t){this.debug&&console.log("gridTableCtrl::grid::triggerEvent"),!e},removeEvent:function(e){this.debug&&console.log("gridTableCtrl::grid::removeEvent"),!e}},l.init=function(e,l){t.$grid.debug&&console.log("gridTableCtrl::init"),l.rowNumbers&&(t.$grid.rowNumbers=l.rowNumbers)},l.renderTpl=function(e,n){t.$grid.debug&&console.log("gridTableCtrl::renderTpl");var r=n.template||t.$grid.defaults.template,i=r.match(/\{[a-z\:]+\}/g);if(i&&i.length>0)for(var o in i){var s=i[o].replace(/\{|\}/g,""),d=null;-1!==s.indexOf(":")&&(d=s.split(":"),s=d.splice(0,1)[0]),s="render"+s[0].toUpperCase()+s.substr(1),l[s]&&angular.isFunction(l[s])&&(e=l[s](e,n))}return e.addClass("grid-table-wrapper"),e},l.renderHeader=function(e){t.$grid.debug&&console.log("gridTableCtrl::renderHeader");var l=angular.element(document.createElement("colgroup")),n=angular.element(document.createElement("thead"));return l.attr({"grid-table-columns":""}),l.addClass("grid-table-columns"),n.attr({"grid-table-header":""}),n.addClass("grid-table-header"),e.find("table").append(l),e.find("table").append(n),e},l.renderItems=function(e){t.$grid.debug&&console.log("gridTableCtrl::renderItems");var l=angular.element(document.createElement("tbody"));return l.attr({"grid-table-items":""}),l.addClass("grid-table-items"),e.find("table").append(l),e},l.renderFooter=function(e){t.$grid.debug&&console.log("gridTableCtrl::renderFooter");var l=angular.element(document.createElement("tfoot"));return l.attr({"grid-table-footer":""}),l.addClass("grid-table-footer"),e.find("table").append(l),e},l.compileTpl=function(l,n){t.$grid.debug&&console.log("gridTableCtrl::compileTpl"),e(n.contents())(l)},l.setColumns=function(e){t.$grid.debug&&console.log("gridTableCtrl::setColumns"),t.$grid.setColumns(e)},l.setColumnsByModel=function(e){t.$grid.debug&&console.log("gridTableCtrl::setColumnsByModel"),t.$grid.setColumnsByModel(e)},l.getColumns=function(){return t.$grid.debug&&console.log("gridTableCtrl::getColumns"),t.$grid.getColumns()||[]},l.setItems=function(e){t.$grid.debug&&console.log("gridTableCtrl::setItems"),t.$grid.setItems(e)},l.getItems=function(){return t.$grid.debug&&console.log("gridTableCtrl::getItems"),t.$grid.getItems()},l.setSort=function(e){},l.getSort=function(){return t.$grid.sort},l.setFilter=function(){},l.getFilter=function(){},l.setViewBy=function(){},l.getViewBy=function(){},l.setPager=function(){},l.getPager=function(){}}]),e.factory("gridTableColumn",[function(){return{}}]),e.factory("gridTableRemote",[function(){return{}}]),e.directive("gridTableColumn",[function(){return{restrict:"EA",require:"^gridTable",templateUrl:"grid-table-column.html"}}]),e.directive("gridTableColumns",[function(){return{restrict:"EA",require:"^gridTable",templateUrl:"grid-table-columns.html"}}]),e.directive("gridTableFooter",[function(){return{restrict:"EA",require:"^gridTable",templateUrl:"grid-table-footer.html"}}]),e.directive("gridTableHeader",[function(){return{restrict:"EA",require:"^gridTable",templateUrl:"grid-table-header.html"}}]),e.directive("gridTableItems",[function(){return{restrict:"EA",require:"^gridTable",templateUrl:"grid-table-items.html"}}]),e.directive("gridTable",["$parse",function(e){return{restrict:"EA",require:["^gridTable","^ngModel"],templateUrl:"grid-table.html",controller:"gridTableCtrl",controllerAs:"$gridCtrl",compile:function(){return function(t,l,n,r){var i=r[0];if(i.init(l,n),l=i.renderTpl(l,n),i.compileTpl(t,l),n.columns)i.setColumns(e(n.columns)(t)),t.$watchCollection(n.columns,function(e,t){angular.equals(e,t)||i.setColumns(e)});else{var o=e(n.ngModel)(t);o&&o.length>0&&i.setColumnsByModel(o[0]),t.$watchCollection(n.ngModel,function(e,t){angular.equals(e,t)||e&&e.length>0&&i.setColumnsByModel(e[0])})}i.setItems(e(n.ngModel)(t)),t.$watchCollection(n.ngModel,function(e,t){angular.equals(e,t)||i.setItems(e)})}}}}]),e.run(["$templateCache",function(e){e.put("grid-table-column.html","<td></td>"),e.put("grid-table-columns.html",'<col ng-repeat="column in $grid.getShowColumns()" class="{{\'grid-table-column-\' + column.columnType}}">'),e.put("grid-table-footer.html",'<tr><td colspan="{{$grid.columnsCount}}">Total: {{$grid.itemsCount}}</td></tr>'),e.put("grid-table-header.html",'<tr><th ng-repeat="column in $grid.getShowColumns()">{{column.label}}</th></tr>'),e.put("grid-table-items.html",'<tr ng-click="$grid.selectItem(item)" ng-class="{\'active\': $grid.isSelectedItem(item)}" ng-repeat="item in $grid.getItems()" ng-init="itemsIndex = $index + 1"><td ng-repeat="column in $grid.getShowColumns()">{{column.columnType == \'numbers\' ? itemsIndex : \'\'}}{{item[column.name]}}</td></tr>'),e.put("grid-table.html",'<table class="grid-table-table"></table>')}])}();